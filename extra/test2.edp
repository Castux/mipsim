int power = 1;
int ground = 0;

border Bottom(t=0, 10){x=t; y=0;}
border Right(t=0,2){x=10; y=t;}

border TopRight(t=10,8){x=t; y=2;}
border PathRight(t=2,5){x=8; y=t;}
border PathTop(t=8,2){x=t; y=5;}
border PathLeft(t=5,1){x=2; y=t;}
border TopLeft(t=2,0){x=t; y=1;}

border Left(t=1,0){x=0; y=t;}

border Inner1(t=3,7){x=t; y=4;}
border Inner2(t=4,1){x=7; y=t;}
border Inner3(t=7,3){x=t; y=1;}
border Inner4(t=1,4){x=3; y=t;}

mesh Th = buildmesh(
	Bottom(10) +
	Right(10) +
	TopRight(10) +
	PathRight(10) +
	PathTop(10) +
	PathLeft(10) +
	TopLeft(10) +
	Left(10) +
	Inner1(10) +
	Inner2(10) +
	Inner3(10) +
	Inner4(10)
);

mesh OrigMesh = Th;

fespace Vh(Th, P1);

Vh e, v;

func r = 0.01 +
	10 * (abs(0.5 - y) < 1) * (abs(5 - x) < 1.5) +
	10 * (abs(4.5 - y) < 1) * (abs(5 - x) < 0.5);

Vh con;

// Define the PDE
problem Problem(e, v)
	= int2d(Th)(
		-dx(e) * ( con * dx(v) + dx(con) * v) +
		-dy(e) * ( con * dy(v) + dy(con) * v) +

		dx(e) * dx(con) * v +
		dy(e) * dy(con) * v
	)
	- int2d(Th)(
		0 * v
	)
	+ on(Left, e = 100)
	+ on(Right, e = 0)
	;

Th = adaptmesh(Th, hmax = 0.05);
con = 1/r;
Problem;

Vh ix = -dx(e) * con;
Vh iy = -dy(e) * con;

Vh i = sqrt(ix*ix + iy*iy);

plot(con, wait=true, fill=true);
plot(e, wait=true, fill=true);
plot([ix,iy], wait=true);
plot(i, value=true, fill=true);

real currOut = int1d(Th,Right)(ix);
real currIn = int1d(Th,Left)(ix);

cout << "Current out " << currOut << endl;
cout << "Current in " << currIn << endl;
